diff --git a/Makefile b/Makefile
index 1b95d15..2efa1c1 100644
--- a/Makefile
+++ b/Makefile
@@ -19,7 +19,7 @@ options:
 	@echo CC $<
 	@${CC} -c ${CFLAGS} $<
 
-${OBJ}: config.h config.mk
+${OBJ}: icon.h config.h config.mk
 
 config.h:
 	@echo creating $@ from config.def.h
diff --git a/config.def.h b/config.def.h
index 989992c..5682aff 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,11 +1,12 @@
 /* See LICENSE file for copyright and license details. */
+#include "icon.h"
 
 /* appearance */
-static const char font[]        = "monospace:size=9";
-static const char* normbgcolor  = "#222222";
-static const char* normfgcolor  = "#cccccc";
-static const char* selbgcolor   = "#555555";
-static const char* selfgcolor   = "#ffffff";
+static const char font[]        = "Source Sans Pro:size=10";
+static const char* normbgcolor  = "#002b36";
+static const char* normfgcolor  = "#839496";
+static const char* selbgcolor   = "#839496";
+static const char* selfgcolor   = "#002b36";
 static const char* urgbgcolor   = "#111111";
 static const char* urgfgcolor   = "#cc0000";
 static const char before[]      = "<";
@@ -20,47 +21,19 @@ static       Bool urgentswitch  = False;
  * then the current position is changed + newposition. If npisrelative
  * is False, then newposition is an absolute position.
  */
-static int  newposition   = 0;
-static Bool npisrelative  = False;
+static int  newposition   = 1;
+static Bool npisrelative  = True;
 
-#define SETPROP(p) { \
-        .v = (char *[]){ "/bin/sh", "-c", \
-                "prop=\"`xwininfo -children -id $1 | grep '^     0x' |" \
-                "sed -e's@^ *\\(0x[0-9a-f]*\\) \"\\([^\"]*\\)\".*@\\1 \\2@' |" \
-                "xargs -0 printf %b | dmenu -l 10`\" &&" \
-                "xprop -id $1 -f $0 8s -set $0 \"$prop\"", \
-                p, winid, NULL \
-        } \
-}
+const char * st_cmd[] = {"env", "-u", "NVIM_LISTEN_ADDRESS", "st", "-w", winid, NULL};
 
 #define MODKEY ControlMask
 static Key keys[] = {
 	/* modifier             key        function     argument */
-	{ MODKEY|ShiftMask,     XK_Return, focusonce,   { 0 } },
-	{ MODKEY|ShiftMask,     XK_Return, spawn,       { 0 } },
-	{ MODKEY,               XK_t,      spawn,       SETPROP("_TABBED_SELECT_TAB") },
-
-	{ MODKEY|ShiftMask,     XK_l,      rotate,      { .i = +1 } },
-	{ MODKEY|ShiftMask,     XK_h,      rotate,      { .i = -1 } },
-	{ MODKEY|ShiftMask,     XK_j,      movetab,     { .i = -1 } },
-	{ MODKEY|ShiftMask,     XK_k,      movetab,     { .i = +1 } },
-	{ MODKEY,               XK_Tab,    rotate,      { .i = 0 } },
-
-	{ MODKEY,               XK_1,      move,        { .i = 0 } },
-	{ MODKEY,               XK_2,      move,        { .i = 1 } },
-	{ MODKEY,               XK_3,      move,        { .i = 2 } },
-	{ MODKEY,               XK_4,      move,        { .i = 3 } },
-	{ MODKEY,               XK_5,      move,        { .i = 4 } },
-	{ MODKEY,               XK_6,      move,        { .i = 5 } },
-	{ MODKEY,               XK_7,      move,        { .i = 6 } },
-	{ MODKEY,               XK_8,      move,        { .i = 7 } },
-	{ MODKEY,               XK_9,      move,        { .i = 8 } },
-	{ MODKEY,               XK_0,      move,        { .i = 9 } },
-
+	{ MODKEY | ShiftMask,   XK_t,      focusonce,   { 0 } },
+	{ MODKEY | ShiftMask,   XK_t,      spawn,       { .v = st_cmd } },
 	{ MODKEY,               XK_q,      killclient,  { 0 } },
-
-	{ MODKEY,               XK_u,      focusurgent, { 0 } },
-	{ MODKEY|ShiftMask,     XK_u,      toggle,      { .v = (void*) &urgentswitch } },
-
+	{ MODKEY,               XK_Tab,    rotate,      { .i = 0 } },
+	{ ShiftMask,            XK_Right,  movetab,     { .i = +1 } },
+	{ ShiftMask,            XK_Left,   movetab,     { .i = -1 } },
 	{ 0,                    XK_F11,    fullscreen,  { 0 } },
 };
diff --git a/config.mk b/config.mk
index 3a71529..13e02e7 100644
--- a/config.mk
+++ b/config.mk
@@ -4,7 +4,7 @@ VERSION = 0.6
 # Customize below to fit your system
 
 # paths
-PREFIX = /usr/local
+PREFIX ?= /usr/local
 MANPREFIX = ${PREFIX}/share/man
 
 # includes and libs
diff --git a/icon.h b/icon.h
new file mode 100644
index 0000000..44ae951
--- /dev/null
+++ b/icon.h
@@ -0,0 +1,36 @@
+static unsigned long icon_buffer[] = {
+32, 32,
+0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
+0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x1c646464, 0x996b6b6b, 0xce737373, 0xda6f6f6f, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6e6e6e, 0xda6f6f6f, 0xda707070, 0xcf737373, 0xa0666666, 0x31343434, 0x01000000, 0x00000000, 0x00000000, 0x00000000,
+0x00000000, 0x00000000, 0x00000000, 0x7e676767, 0xf7737373, 0xff5e5e5e, 0xff525252, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff525252, 0xff5e5e5e, 0xf7737373, 0x95565656, 0x0b000000, 0x00000000, 0x00000000,
+0x00000000, 0x00000000, 0x7f646464, 0xfe696969, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xff515151, 0xfe696969, 0x9a535353, 0x0b000000, 0x00000000,
+0x00000000, 0x1d585858, 0xf6696969, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xff505050, 0xf7696969, 0x50232323, 0x01000000,
+0x00000000, 0x98606060, 0xff535353, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff4f4f4f, 0xff535353, 0xaf525252, 0x0f000000,
+0x00000000, 0xcb5a5a5a, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xd4555555, 0x21000000,
+0x00000000, 0xd8575757, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff6a6a6a, 0xff666666, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xff4e4e4e, 0xde555555, 0x2b000000,
+0x00000000, 0xd9555555, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff939393, 0xffffffff, 0xffd8d8d8, 0xff949494, 0xff5a5a5a, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xff4d4d4d, 0xdf525252, 0x2d000000,
+0x00000000, 0xda525252, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff919191, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff9f9f9, 0xffbfbfbf, 0xff7c7c7c, 0xff4f4f4f, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xe0505050, 0x2e000000,
+0x00000000, 0xda515151, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff686868, 0xffa7a7a7, 0xffe8e8e8, 0xffffffff, 0xffffffff, 0xffffffff, 0xffededed, 0xffa9a9a9, 0xff525252, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xe14d4d4d, 0x2e000000,
+0x00000000, 0xda4e4e4e, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4a4a4a, 0xff393939, 0xff343434, 0xff606060, 0xffa5a5a5, 0xfff9f9f9, 0xffffffff, 0xffffffff, 0xff525252, 0xff484848, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xff4b4b4b, 0xe14c4c4c, 0x30000000,
+0x00000000, 0xda4c4c4c, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff656565, 0xffa7a7a7, 0xffececec, 0xffffffff, 0xffffffff, 0xffffffff, 0xff4d4d4d, 0xff363636, 0xff474747, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xff4a4a4a, 0xe14a4a4a, 0x31000000,
+0x00000000, 0xda4b4b4b, 0xff494949, 0xff494949, 0xff494949, 0xff666666, 0xffb9b9b9, 0xfff3f3f3, 0xffffffff, 0xffffffff, 0xffffffff, 0xffeeeeee, 0xffaaaaaa, 0xff626262, 0xff333333, 0xff323232, 0xff353535, 0xff464646, 0xff494949, 0xff494949, 0xff494949, 0xff494949, 0xff494949, 0xff494949, 0xff494949, 0xff494949, 0xff494949, 0xff494949, 0xff494949, 0xff494949, 0xe1494949, 0x31000000,
+0x00000000, 0xda494949, 0xff494949, 0xff494949, 0xff494949, 0xff909090, 0xffffffff, 0xffffffff, 0xfff8f8f8, 0xffbbbbbb, 0xff707070, 0xff363636, 0xff323232, 0xff323232, 0xff323232, 0xff323232, 0xff323232, 0xff353535, 0xff454545, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xe1464646, 0x32000000,
+0x00000000, 0xdb474747, 0xff484848, 0xff484848, 0xff484848, 0xff8a8a8a, 0xffbebebe, 0xff767676, 0xff383838, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff343434, 0xff454545, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xff484848, 0xe2464646, 0x33000000,
+0x00000000, 0xdb454545, 0xff474747, 0xff474747, 0xff474747, 0xff454545, 0xff353535, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff313131, 0xff343434, 0xff444444, 0xff474747, 0xff474747, 0xff474747, 0xff474747, 0xff474747, 0xff474747, 0xff474747, 0xff474747, 0xff474747, 0xe2444444, 0x34000000,
+0x00000000, 0xdc424242, 0xff464646, 0xff464646, 0xff464646, 0xff464646, 0xff444444, 0xff343434, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff333333, 0xff444444, 0xff464646, 0xff464646, 0xff464646, 0xff464646, 0xff464646, 0xff464646, 0xff464646, 0xff464646, 0xe2414141, 0x34000000,
+0x00000000, 0xdc424242, 0xff464646, 0xff464646, 0xff464646, 0xff464646, 0xff464646, 0xff444444, 0xff343434, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff333333, 0xff444444, 0xff464646, 0xff464646, 0xff464646, 0xff464646, 0xff454545, 0xff454545, 0xff454545, 0xe3404040, 0x35000000,
+0x00000000, 0xdc414141, 0xff454545, 0xff454545, 0xff454545, 0xff454545, 0xff454545, 0xff454545, 0xff434343, 0xff333333, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff323232, 0xff434343, 0xff454545, 0xff454545, 0xff454545, 0xff454545, 0xff454545, 0xff454545, 0xe3414141, 0x36000000,
+0x00000000, 0xdd3f3f3f, 0xff444444, 0xff444444, 0xff444444, 0xff444444, 0xff444444, 0xff444444, 0xff444444, 0xff424242, 0xff323232, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff2f2f2f, 0xff323232, 0xff424242, 0xff444444, 0xff444444, 0xff444444, 0xff444444, 0xff444444, 0xe43f3f3f, 0x37000000,
+0x00000000, 0xdd3e3e3e, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff414141, 0xff323232, 0xff2e2e2e, 0xff2e2e2e, 0xff2e2e2e, 0xff2e2e2e, 0xff2e2e2e, 0xff2e2e2e, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff303030, 0xff333333, 0xff424242, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xe43c3c3c, 0x39000000,
+0x00000000, 0xdd3d3d3d, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff434343, 0xff414141, 0xff323232, 0xff2e2e2e, 0xff2e2e2e, 0xff2e2e2e, 0xff2e2e2e, 0xff363636, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff888888, 0xff414141, 0xff434343, 0xff434343, 0xe53b3b3b, 0x39000000,
+0x00000000, 0xde3c3c3c, 0xff424242, 0xff424242, 0xff424242, 0xff424242, 0xff424242, 0xff424242, 0xff424242, 0xff424242, 0xff424242, 0xff424242, 0xff404040, 0xff313131, 0xff2d2d2d, 0xff2d2d2d, 0xff2d2d2d, 0xff353535, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff868686, 0xff303030, 0xff404040, 0xff424242, 0xe53a3a3a, 0x3a000000,
+0x00000000, 0xde3b3b3b, 0xff414141, 0xff414141, 0xff414141, 0xff414141, 0xff414141, 0xff414141, 0xff414141, 0xff414141, 0xff414141, 0xff414141, 0xff414141, 0xff3f3f3f, 0xff303030, 0xff2d2d2d, 0xff2d2d2d, 0xff303030, 0xff969696, 0xff969696, 0xff969696, 0xff969696, 0xff969696, 0xff969696, 0xff969696, 0xff969696, 0xff595959, 0xff2d2d2d, 0xff303030, 0xff3f3f3f, 0xe5393939, 0x3a000000,
+0x00000000, 0xd3363636, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff3e3e3e, 0xff2f2f2f, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2f2f2f, 0xdd333333, 0x36000000,
+0x00000000, 0xab2d2d2d, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff404040, 0xff3e3e3e, 0xff2f2f2f, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xff2c2c2c, 0xc9222222, 0x29000000,
+0x00000000, 0x3d151515, 0xf93b3b3b, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3f3f3f, 0xff3d3d3d, 0xff2e2e2e, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xfa2c2c2c, 0x820a0a0a, 0x13000000,
+0x00000000, 0x02000000, 0xa7222222, 0xff3b3b3b, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3c3c3c, 0xff2e2e2e, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2b2b2b, 0xff2a2a2a, 0xc0191919, 0x3e000000, 0x04000000,
+0x00000000, 0x00000000, 0x13000000, 0xad1d1d1d, 0xf9353535, 0xff3c3c3c, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3e3e3e, 0xff3d3d3d, 0xff3d3d3d, 0xff3d3d3d, 0xff3d3d3d, 0xff3d3d3d, 0xff3d3d3d, 0xff3d3d3d, 0xff3d3d3d, 0xff3b3b3b, 0xff2d2d2d, 0xff2a2a2a, 0xff2a2a2a, 0xff2a2a2a, 0xff2a2a2a, 0xff2a2a2a, 0xff2a2a2a, 0xff292929, 0xfb262626, 0xc0181818, 0x51000000, 0x0e000000, 0x00000000,
+0x00000000, 0x00000000, 0x00000000, 0x11000000, 0x6a0a0a0a, 0xc31f1f1f, 0xe1282828, 0xe82b2b2b, 0xe92c2c2c, 0xe92c2c2c, 0xe92c2c2c, 0xe92c2c2c, 0xe92c2c2c, 0xe92c2c2c, 0xe92c2c2c, 0xe92c2c2c, 0xe92c2c2c, 0xe92c2c2c, 0xe92c2c2c, 0xea2b2b2b, 0xed212121, 0xee212121, 0xee212121, 0xee212121, 0xee212121, 0xe71f1f1f, 0xcd1a1a1a, 0x83080808, 0x3e000000, 0x0e000000, 0x00000000, 0x00000000,
+0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x02000000, 0x17000000, 0x30000000, 0x3f000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x42000000, 0x39000000, 0x2a000000, 0x14000000, 0x04000000, 0x00000000, 0x00000000, 0x00000000,
+};
+static unsigned int icon_buffer_length = 1026;
diff --git a/tabbed.c b/tabbed.c
index 9a44795..8ddf22e 100644
--- a/tabbed.c
+++ b/tabbed.c
@@ -786,7 +786,12 @@ movetab(const Arg *arg)
 	int c;
 	Client *new;
 
-	c = (sel + arg->i) % nclients;
+	c = (sel + arg->i);
+	if (nclients == 2)
+		c = c < 0? 0: (c > 1? 1: c);
+	else
+		c = c % nclients;
+
 	if (c < 0)
 		c += nclients;
 
@@ -897,6 +902,8 @@ rotate(const Arg *arg)
 	} else if (sel > -1) {
 		/* Rotating in an arg->i step around the clients. */
 		nsel = sel + arg->i;
+		if (nclients == 2)
+			nsel = nsel < 0? 0: (nsel > 1? 1: nsel);
 		while (nsel >= nclients)
 			nsel -= nclients;
 		while (nsel < 0)
@@ -970,7 +977,7 @@ setup(void)
 	screen = DefaultScreen(dpy);
 	root = RootWindow(dpy, screen);
 	initfont(font);
-	bh = dc.h = dc.font.height + 2;
+	bh = dc.h = dc.font.height + 10;
 
 	/* init atoms */
 	wmatom[WMDelete] = XInternAtom(dpy, "WM_DELETE_WINDOW", False);
@@ -1055,6 +1062,8 @@ setup(void)
 	XFree(wmh);
 
 	XSetWMProtocols(dpy, win, &wmatom[WMDelete], 1);
+	Atom netwmicon = XInternAtom(dpy, "_NET_WM_ICON", False);
+	XChangeProperty(dpy, win, netwmicon, XA_CARDINAL, 32, PropModeReplace, (const unsigned char *)icon_buffer, icon_buffer_length);
 
 	snprintf(winid, sizeof(winid), "%lu", win);
 	setenv("XEMBED", winid, 1);
